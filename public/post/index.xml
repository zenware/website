<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on Jay Looney</title>
    <link>https://www.jaylooney.dev/post/</link>
    <description>Recent content in Articles on Jay Looney</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://www.jaylooney.dev/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing Python Code</title>
      <link>https://www.jaylooney.dev/post/python-testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.jaylooney.dev/post/python-testing/</guid>
      <description>The following is a selection of some Python testing libraries, commandline tools, etc. that I use, find cool, and have found real utility in when testing Python Code.
unittest The unittest module ships with python since 2.7 and includes some basic test discovery.
import unittest class TestStringMethods(unittest.TestCase): def test_upper(self): self.assertEqual(&#39;foo&#39;.upper(), &#39;FOO&#39;) def test_isupper(self): self.assertTrue(&#39;FOO&#39;.isupper()) self.assertFalse(&#39;Foo&#39;.isupper()) if __name__ == &#39;__main__&#39;: unittest.main()  doctest The doctest module also comes with python, but works in an entirely different way.</description>
    </item>
    
  </channel>
</rss>